@model N.DB.Models.Note

@using (Html.BeginForm("SaveNewNote", "Note", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="horisont">

        @*Name*@
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "Name", style = "background-color: #ffffff; margin-left: 0%" } })

        @*Checkbox*@
        <div class="[ form-group ]" style="margin-left: 1%; display: inline;">

            @Html.CheckBoxFor(model => model.Flag, new { name = "fancy-checkbox-info", id = "fancy-checkbox-info" })
            <div class="[ btn-group ]">
                <label for="fancy-checkbox-info" class="[ btn btn-info ]">
                    <span class="[ glyphicon glyphicon-ok ]" id="CheckBox"></span>
                    <span> </span>
                </label>
                <label for="fancy-checkbox-info" class="[ btn btn-default active ]">
                    Post this notes
                </label>
            </div>
        </div>
        @*end*@

        @*Button open file*@
        <input type="file" name="file" style="display: inline; margin-left: 1%;" >

    </div>

        @Html.TextAreaFor(model => model.Content, new { rows = "15", style = "width:100%; max-width:100%; margin-top: 0.5%", placeholder = Html.DisplayNameFor(m => m.Content), @class = "form-control input-lg textarea-editor" })

        @Html.TextAreaFor(model => model.TagList, new { style = "width:100%; max-width:100%; margin-top: 0.5%", placeholder = Html.DisplayNameFor(m => m.TagList), @class = "form-control input-lg textarea-editor" })
    
        <input type="submit" value="Save" style="margin-left: 0%; margin-top: 0.5%" />
}



<script>
    function SaveNote() {
        $.ajax({
            url: '@Url.Action("SaveNote", "Note")',
            type: 'POST',
            cache: false,
            data: $("#noteForm").serializeArray()
        });
    }
</script>



@*<div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @rows = 20 })

                @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TagList, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TagList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TagList, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.File, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Сохранить" class="btn btn-default" />
            </div>
        </div>
    </div>*@

