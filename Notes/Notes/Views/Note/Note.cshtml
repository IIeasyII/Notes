@model N.DB.Models.Note

@using (Html.BeginForm("Note", "Note", FormMethod.Post, new { id = "noteForm" }))
{
    @Html.AntiForgeryToken()

    <div style="text-align: left; margin-top: 10px;">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { placeholder = "Название", size = "60px" } })

        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
    </div>

    <div style="text-align: left; margin-top: 10px">
        @Html.TextAreaFor(model => model.Content, new { @rows = 20, @cols = 100 })
    </div>

    <div style="text-align: left; margin-top: 10px;">
        @Html.EditorFor(model => model.TagList, new { htmlAttributes = new { placeholder = "Теги", size = "60px" } })
        @Html.ValidationMessageFor(model => model.TagList, "", new { @class = "text-danger" })
    </div>

    <div style="text-align: left; margin-top: 10px;" >

        <button name="BFile" onclick="">Файл</button>
    </div>

    <div style="text-align: left; margin-top: 10px;">
        @*<input type="button" value="Сохранить" onclick="location.href='@Url.Action("SaveNote", "Note", new N.DB.Models.Note { Name = Model.Name }, null)'" />*@

        <input type="button" value="Сохранить" onclick="SaveNote()" />

        @*@{((Notes.Controllers.NoteController)this.ViewContext.Controller).SaveNote(new N.DB.Models.Note() { Name = Model.Name, Content = Model.Content, TagList = Model.TagList });}*@

    </div>
}

<script>
    function SaveNote() {
        $.ajax({
            url: '@Url.Action("SaveNote", "Note")',
            type: 'POST',
            cache: false,
            data: $("#noteForm").serializeArray()
        });
    }
</script>



    @*<div class="form-horizontal">
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-10">
                    @Html.TextAreaFor(model => model.Content, new { @class = "form-control", @rows = 20 })

                    @Html.EditorFor(model => model.Content, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Content, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TagList, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.TagList, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.TagList, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.File, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.File, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.File, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Сохранить" class="btn btn-default" />
                </div>
            </div>
        </div>*@

